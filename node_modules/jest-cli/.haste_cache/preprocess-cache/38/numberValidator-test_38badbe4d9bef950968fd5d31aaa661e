'use strict';

jest.unmock('../../src/components/numberValidator/numberValidator.js');
var /*istanbul ignore next*/_numberValidator = require('../../src/components/numberValidator/numberValidator.js'); /*istanbul ignore next*/var _numberValidator2 = _interopRequireDefault(_numberValidator);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

describe('numberValidator', function () {

    describe('getValidIntegerFromString', function () {

        it('should return false if outside the valid range', function () {

            expect( /*istanbul ignore next*/_numberValidator2.default.getValidIntegerFromString('100', 0, 99)).toEqual(false);});


        it('should return an integer if valid', function () {

            expect(Number.isInteger( /*istanbul ignore next*/_numberValidator2.default.getValidIntegerFromString('99', 0, 100))).toEqual(true);});});




    describe('isInteger', function () {

        it('should return false when trying to use leading zeros', function () {


            console.log( /*istanbul ignore next*/_numberValidator2.default.isStringValueValidInteger('001'));

            expect( /*istanbul ignore next*/_numberValidator2.default.isStringValueValidInteger('001')).toEqual(false);});});});